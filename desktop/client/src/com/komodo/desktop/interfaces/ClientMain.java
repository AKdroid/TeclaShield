/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.komodo.desktop.interfaces;

import com.komodo.desktop.client.BluetoothClient;
import com.komodo.desktop.client.EventConstant;
import com.komodo.desktop.client.GlobalVar;
import com.komodo.desktop.client.PreferencesHandler;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowEvent;
import javax.swing.JButton;
import javax.swing.JFrame;
import org.w3c.dom.Element;

/**
 * This is the main window of the TeclaDesktop
 * @author Akhil
 */
public class ClientMain extends javax.swing.JFrame {

    /**
     * Creates new form ClientMain
     */
    public static final String TECLA_ICON_PATH="tekla_icon.png";
    ButtonPref b1,b2,b3,b4,b5,b6;
    BluetoothClient bcl;
    SystemTray systray;
    TrayIcon icon;
    boolean systray_available;
    ConfigSel cfgsel;
    JButton close;
    boolean closeflag=false;
    public static int DELAY=2; 
    public static int connection_method;
    Element root;
    PreferencesHandler prefs;
    
    public ClientMain(PreferencesHandler pref,BluetoothClient bcl_) {
        initComponents();
        prefs=pref;
        //Select the desired configurations
        cfgsel=new ConfigSel(this,pref);
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(cfgsel);
        refresh_display(pref);
        bcl=bcl_;
        closeflag=false;   
        buttonGroup1.add(radioShield);
        buttonGroup1.add(radioandroid);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        //Set Application icon in the title bar
        setIconImage(Toolkit.getDefaultToolkit().createImage(TECLA_ICON_PATH));
        //Get the System Tray of the system.
        systray=SystemTray.getSystemTray();
        systray_available=systray.isSupported();
        root=(Element)prefs.get_doc().getFirstChild();
        connection_method=Integer.parseInt(root.getAttribute("connection"));
        if(connection_method==EventConstant.CONNECT_TO_ANDROID){
            radioandroid.setSelected(true);
            radioShield.setSelected(false);
        }
        else if(connection_method==EventConstant.CONNECT_TO_BLUETOOTH){
            radioShield.setSelected(true);
            radioandroid.setSelected(false);
        }
        if(systray_available){
            Image icon_img = Toolkit.getDefaultToolkit().createImage(TECLA_ICON_PATH);
            icon=new TrayIcon(icon_img,"TeclaDesktop");
            icon.setImageAutoSize(true);
            icon.addMouseListener(new MouseListener(){

                @Override
                public void mouseClicked(MouseEvent me) {
                    
                    
                    java.awt.EventQueue.invokeLater(new Runnable()
                    {

                        @Override
                        public void run() {
                            setVisible(true);
                            setExtendedState(JFrame.NORMAL);
                            toFront();
                            repaint();
                        }
                    }
                    );
                    systray.remove(icon);
                }

                @Override
                public void mousePressed(MouseEvent me) {
                    
                }

                @Override
                public void mouseReleased(MouseEvent me) {
                    
                }

                @Override
                public void mouseEntered(MouseEvent me) {
                    
                }

                @Override
                public void mouseExited(MouseEvent me) {
                    
                }
            });
        }
    }
    
    public void refresh_display(PreferencesHandler pref)
    {
        //initialize buttonpref panels
        b1=new ButtonPref(ShieldEvent.ECU1,pref);
        b2=new ButtonPref(ShieldEvent.ECU2,pref);
        b3=new ButtonPref(ShieldEvent.ECU3,pref);
        b4=new ButtonPref(ShieldEvent.ECU4,pref);
        b5=new ButtonPref(ShieldEvent.E1,pref);
        b6=new ButtonPref(ShieldEvent.E2,pref);
        //Add button tabs to the panel
        preftab.removeAll();    // Cleanup all tabs
        preftab.addTab("ECU UP",b1);
        preftab.addTab("ECU DOWN",b2);
        preftab.addTab("ECU LEFT",b3);
        preftab.addTab("ECU RIGHT",b4);
        preftab.addTab("SWITCH 1",b5);
        preftab.addTab("SWITCH 2",b6);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        preftab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        statuslabel = new javax.swing.JLabel();
        disconnect_Button = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        radioShield = new javax.swing.JRadioButton();
        radioandroid = new javax.swing.JRadioButton();
        setPassword = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TeclaClient");
        setPreferredSize(new java.awt.Dimension(920, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 303, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 77, Short.MAX_VALUE)
        );

        statuslabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        statuslabel.setText("Welcome to TeclaDesktop !!");
        statuslabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        disconnect_Button.setText("Disconnect");
        disconnect_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                disconnect_ButtonMouseClicked(evt);
            }
        });
        disconnect_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnect_ButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Quit");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Start on Startup");

        radioShield.setText("TeclaShield");
        radioShield.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioShieldItemStateChanged(evt);
            }
        });

        radioandroid.setText("Android");
        radioandroid.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioandroidItemStateChanged(evt);
            }
        });

        setPassword.setText("Set Password");
        setPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setPasswordMouseClicked(evt);
            }
        });

        jLabel1.setText("  Connect to :  ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addGap(22, 22, 22)
                                .addComponent(disconnect_Button)
                                .addGap(26, 26, 26)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(27, 27, 27)
                                .addComponent(radioShield)
                                .addGap(18, 18, 18)
                                .addComponent(radioandroid)
                                .addGap(18, 18, 18)
                                .addComponent(setPassword)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(preftab, javax.swing.GroupLayout.PREFERRED_SIZE, 848, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(statuslabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(radioShield)
                            .addComponent(radioandroid)
                            .addComponent(setPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(disconnect_Button)
                            .addComponent(jCheckBox1)
                            .addComponent(jButton2)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statuslabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(preftab, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
                // TODO add your handling code here:
                if(closeflag){
                bcl.close();
                }
                else{
                this.setState(JFrame.ICONIFIED);    
                }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        // TODO add your handling code here:
        if(systray_available)
            try {
            systray.add(icon);
            setVisible(false);
        } catch (AWTException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_formWindowIconified

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void disconnect_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnect_ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_disconnect_ButtonActionPerformed

    private void disconnect_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disconnect_ButtonMouseClicked
        // TODO add your handling code here:
        bcl.disconnect_temp(DELAY*60000);
    }//GEN-LAST:event_disconnect_ButtonMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        closeflag=true;
        bcl.close();
        WindowEvent wev = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(wev);
        setVisible(false);
        dispose();
        System.exit(0);
    }//GEN-LAST:event_jButton2MouseClicked

    private void radioandroidItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioandroidItemStateChanged
        // TODO add your handling code here:
        if(radioandroid.isSelected()){
            connection_method=EventConstant.CONNECT_TO_ANDROID;
            root.setAttribute("connection",""+EventConstant.CONNECT_TO_ANDROID);
            prefs.commitchanges(prefs.get_doc());
        }
    }//GEN-LAST:event_radioandroidItemStateChanged

    private void radioShieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioShieldItemStateChanged
        // TODO add your handling code here:
        if(radioShield.isSelected()){
            connection_method=EventConstant.CONNECT_TO_BLUETOOTH;
            root.setAttribute("connection",""+EventConstant.CONNECT_TO_BLUETOOTH);
            prefs.commitchanges(prefs.get_doc());
        }
    }//GEN-LAST:event_radioShieldItemStateChanged

    private void setPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setPasswordMouseClicked
        // TODO add your handling code here:
        PasswordSetter setter=new PasswordSetter(this,true,GlobalVar.android_server);
        setter.setVisible(true);
    }//GEN-LAST:event_setPasswordMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton disconnect_Button;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane preftab;
    private javax.swing.JRadioButton radioShield;
    private javax.swing.JRadioButton radioandroid;
    private javax.swing.JButton setPassword;
    private javax.swing.JLabel statuslabel;
    // End of variables declaration//GEN-END:variables
    public void AskSelection(String[] option_devices){
        //fires a dialog asking the user which device to connect in case of multiple TeclaShields
        ChooserDialog dl=new ChooserDialog(this,true,option_devices);
        dl.setVisible(true);
    }
    public void onSelectDialog(int index){
        //Connect to a particular device as selected by the user after presing "Select" in the dialog.
        bcl.selectservice(index);
    }
    
    public void setStatus(String message){
        /*
         * Display status message regarding connection status and other information.
         */
        
        statuslabel.setText(message);  //Display message on the main GUI 
        
        if(icon != null){
            //If the GUI is iconified and systemtray is supported, 
            //messages will be dispalyed at the tray icon for some ammount of time.
            icon.displayMessage("TeclaDesktop", message, TrayIcon.MessageType.INFO);
            
        }
    }
}
